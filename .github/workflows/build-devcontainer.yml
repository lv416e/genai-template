name: build-and-push-devcontainer-image

on:
  push:
    branches: [main]
    paths:
      - ".devcontainer/**"
      - ".github/workflows/build-devcontainer.yml"
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]
    paths:
      - ".devcontainer/**"
      - ".github/workflows/build-devcontainer.yml"
  workflow_dispatch:
  # schedule:
  #   # Rebuild weekly to get latest base image updates
  #   - cron: "0 2 * * 1"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: genai-template-devcontainer

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete all old versions to save costs
        continue-on-error: true
        uses: actions/delete-package-versions@v5
        with:
          package-name: "genai-template-devcontainer"
          package-type: "container"
          min-versions-to-keep: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value={{date 'YYYY-MM-DD'}},enable={{is_default_branch}}
            type=sha,prefix=sha-,enable={{is_default_branch}}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: .devcontainer/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

      - name: Image digest
        run: |
          echo "Image digest: ${{ steps.build.outputs.digest }}"
